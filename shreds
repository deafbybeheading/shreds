#!/bin/bash

#set -x
set -e

# TODO: configurable
VERSION=0.2
EDITOR=emacs

WORKDIR='/tmp'

CDROM='/dev/cdrom'
OFFSET=697

ENCODED_ROOT="${1:-$HOME/Music}"
ENCODE_OPTS="-V 2 --id3v2-only"


TRACK_OFFSET=0
while getopts "o" opt
do
    case "$opt" in
	o)TRACK_OFFSET="$OPTARG";;
    esac
done
shift $((OPTIND-1))


DISC_INFO=`cd-discid $CDROM`
DISC_ID=`echo $DISC_INFO | cut -d\  -f1`

# CDDB protocol used as documented here: http://ftp.freedb.org/pub/freedb/misc/freedb_CDDB_protcoldoc.zip and
# here http://ftp.freedb.org/pub/freedb/latest/DBFORMAT
CDDB_VER=6
CDDB_URL="http://freedb.freedb.org/~cddb/cddb.cgi"
CDDB_USER=`whoami`
CDDB_HOST=`hostname`

# Issue a remote CDDB command (if not cached); arguments are the command in question and its arguments (as a single parameter)
cddb() {
    #TODO: just echo the filename instead of using a separate function
    FILENAME="`cddb_file "$1" "$2"`"
    CDDB_REQUEST="${CDDB_URL}?cmd=cddb+${1}+${2}&hello=${CDDB_USER}+${CDDB_HOST}+$(basename $0)+${VERSION}&proto=${CDDB_VER}"
    echo CDDB request: $CDDB_REQUEST
    test -f "$FILENAME" || wget -O "$FILENAME" "$CDDB_REQUEST"
}

cddb_file() {
    echo "$2.${1}"
}

cddb query "$DISC_INFO"
CDDB_LISTING="`cddb_file query \"$DISC_INFO\"`"
CDDB_STATUS=$(head -c3 "$CDDB_LISTING")
SELECTED_DISC=
echo "cddb query status is $CDDB_STATUS"
if [ "$CDDB_STATUS" -eq 210 -o "$CDDB_STATUS" -eq 211 ];
then
    # multiple results (exact or inexact)
    let i=1
    echo "Select disc metadata:"
    tail -n +2 "$CDDB_LISTING" | head -n -1 | awk '{print FNR "\t" $0}'
    read SELECTED_INDEX
    SELECTED_DISC="`tail -n +$((SELECTED_INDEX+1)) "$CDDB_LISTING" | head -1 | cut -d\  -f 1,2`"
elif [ "$CDDB_STATUS" -eq 200 ];
then
    # single result
    SELECTED_DISC="`cut -d\  -f2,3 \"$CDDB_LISTING\"`"
else
    # errors
    echo "ERROR: Unrecognized status."
    exit $CDDB_STATUS
fi

cddb read "$SELECTED_DISC"
CDDB_METADATA="`cddb_file read \"$SELECTED_DISC\"`"
CDDB_STATUS="$(head -c3 "$CDDB_METADATA")"
METADATA_FILE=`mktemp "$WORKDIR/metadata.XXXXX"`

# Generate a file with
#   album artist / album title / year / genre / track no. / artist / title
# for each track. The user can edit this pre-encoding to adjust CDDB results.

DTITLE="$(sed -r -n 's_^DTITLE=(.*)$_\1_p' "$CDDB_METADATA" | tr -d '\r')"
# Bash string mangling: this strips the longest trailing match
# and shortest leading match (since cut can't handle a multi-char delimiter)
ALBUM_ARTIST="${DTITLE%% / *}"
ALBUM_TITLE="${DTITLE#* / }"
YEAR="$(sed -r -n 's_^DYEAR=(.*)_\1_p' "$CDDB_METADATA" | tr -d '\r')"
GENRE="$(sed -r -n 's_^DGENRE=(.*)_\1_p' "$CDDB_METADATA" | tr -d '\r')"

# This is simplistic. We could be dealing with a split single, a
# soundtrack, or something else that has more than one artist. We may
# want something better.
if $(echo "$ALBUM_ARTIST" | grep -i '^Various' &>/dev/null);
then 
    IS_VA=true
fi

let i=$TRACK_OFFSET+1
grep "^TTITLE" "$CDDB_METADATA" | while read track;
do
    TRACK_NO=$i
    TRACK_INFO="$(echo $track | sed -r -n 's_^TTITLE[0-9]{1,3}=(.*)$_\1_p' | tr -d '\r')"
    if test -n "$IS_VA";
    then
	TRACK_ARTIST="${TRACK_INFO%% / *}"
	TRACK_TITLE="${TRACK_INFO#* / }"
    else
	TRACK_ARTIST="$ALBUM_ARTIST"
	TRACK_TITLE="$TRACK_INFO"
    fi
    # If you have embedded tabs in your music metadata, FSM help you
    echo -e "${ALBUM_ARTIST}\t${ALBUM_TITLE}\t${YEAR}\t${GENRE}\t${TRACK_NO}\t${TRACK_ARTIST}\t${TRACK_TITLE}" >> "$METADATA_FILE"
    let i+=1
done

$EDITOR "$METADATA_FILE"

# TODO: offer a way to abort here

while IFS=$'\011' read alb_artist alb_title year genre track_no artist title
do
    WAV_FILE=`mktemp "$WORKDIR/track_${track_no}.wav.XXXXX"`
    cdparanoia $track_no -d "$CDROM" -O $OFFSET "$WAV_FILE"
    # TODO: we should just create the dir up front, but that's not that easy
    # since our intermediate metadata file is per-track. If we use the original
    # album artist info, this could be inconsistent with the edited metadata file.
    ENCODED_DIR="${ENCODED_ROOT}/${alb_artist}/${alb_title}"
    mkdir -p "$ENCODED_DIR"

    LAME_OPTS="$ENCODE_OPTS --tv TXXX=DISCID=$DISC_ID"
    if test -n "$IS_VA";
    then
	LAME_OPTS="$LAME_OPTS --tv \"ALBUM ARTIST\"=\"$alb_artist\""
    fi
    lame $LAME_OPTS --tl "$alb_title" --ty "$year" --tg "$genre" --ta "$artist" --tt "$title" --tn "$track_no" "$WAV_FILE" "$ENCODED_DIR/$(printf "%02d" $track_no)-${title}.mp3"
done < "$METADATA_FILE"

#TODO: cleanup of $METADATA_FILE and all the $WAV_FILEs for the tracks



